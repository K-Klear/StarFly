local STR = require("main/modules/strings")
local CREW = require("main/modules/crew")
local ROOM = require("main/modules/rooms")


go.property("skin_colour", vmath.vector4(1, 1, 1, 1))
go.property("hair_colour", vmath.vector4(1, 1, 1, 1))
go.property("clothes_colour", vmath.vector4(1, 1, 1, 1))
go.property("hair", 1)
go.property("name_key", hash(""))
go.property("name_gender", hash("male"))
go.property("role", hash("role_none"))
go.property("x", 0)
go.property("y", 0)
go.property("z", 0)

local pos = vmath.vector3(-176, -128, 0.05)
local speed = 0.02
local speed_climb = 0.015


local bodyparts = {"torso", "head", "hair", "legs", "hand"}

local function play_crew_animation(animation, self)
	for key, val in ipairs(bodyparts) do
		sprite.play_flipbook("#"..val, val.."_"..animation.."_1")
	end
	sprite.play_flipbook("#hair", "hair_"..animation.."_"..self.hair)
end

--[[
local function move_x(target, self)
	local dir = (target - self.x) / math.abs(target - self.x)
	for key, val in ipairs(bodyparts) do
		sprite.set_hflip("#"..val, dir == 1)
	end
	local new_x = pos.x + (self.x + dir) * 32
	local duration = math.abs(go.get_position().x - new_x) * speed
	go.animate(go.get_id(), "position.x", go.PLAYBACK_ONCE_FORWARD, new_x, go.EASING_LINEAR, duration, 0, function() finish_step(self.x + dir, self.y, self) end)
end

local function move_y(target, self)
	local dir = (target - self.y) / math.abs(target - self.y)
	local new_y = pos.y + (self.y + dir) * 96
	local duration = math.abs(go.get_position().y - new_y) * speed_climb
	go.animate(go.get_id(), "position.y", go.PLAYBACK_ONCE_FORWARD, new_y, go.EASING_LINEAR, duration, 0, function() finish_step(self.x, self.y + dir, self) end)
end
--]]

local function walk(x, y, self)
	-- store new location
	
	-- get route
	print(go.get_position() + pos)
	print(x, y)
	print(self.x, self.y)
	-- 208 = 12, 64 = 2
	-- go.set_position(pos + vmath.vector3(self.x * 32, self.y * 96, self.z * 0.05))
end


function init(self)
	go.set_parent(go.get_id(), "/ship")
	sprite.set_constant("#hand", "tint", self.skin_colour)
	sprite.set_constant("#head", "tint", self.skin_colour)
	sprite.set_constant("#hair", "tint", self.hair_colour)
	sprite.set_constant("#torso", "tint", self.clothes_colour)
	sprite.set_constant("#legs", "tint", self.clothes_colour - vmath.vector4(0.1, 0.1, 0.1, 0))
	sprite.play_flipbook("#hair", "hair_idle_"..self.hair)
	go.set_position(pos + vmath.vector3(self.x * 32, self.y * 96, self.z * 0.05))
	msg.post("#reticle", hash("disable"))
	label.set_text("#name", STR.en.names[self.name_gender][self.name_key])
	msg.post("#name", hash("disable"))
	msg.post("#role_icon", hash("disable"))
	msg.post("#role_label", hash("disable"))
	msg.post("#speech_bubble", hash("disable"))
	go.set("#speech_bubble", "scale", vmath.vector3(0.5, 0.5, 0.5))
	go.set("#role_icon", "scale", vmath.vector3(1/2, 1/2, 1/2))
	msg.post("#", hash("set_role"), {role = self.role})
end

function on_message(self, message_id, message, sender)
	if message_id == hash("highlight") then
		msg.post("#reticle", hash("enable"))
		msg.post("#name", hash("enable"))
		msg.post("#role_icon", hash("enable"))
		msg.post("#role_label", hash("enable"))
	elseif message_id == hash("remove_highlight") then
		msg.post("#reticle", hash("disable"))
		msg.post("#name", hash("disable"))
		msg.post("#role_icon", hash("disable"))
		msg.post("#role_label", hash("disable"))
	elseif message_id == hash("clicked") then
		msg.post("/cursor", hash("selected"), {id = go.get_id()})
		sound.play("#selected")
		sprite.play_flipbook("#reticle", "crew_reticle_active")
		local id
		for key, val in ipairs(CREW.list) do
			if go.get_id() == val.go then
				id = key; break
			end
		end

		local props = {label = hash("btn_crew_talk"), callback = hash("crew_talk"),	enabled = true, id = id}
		self.button_talk = factory.create("#factory_button", vmath.vector3(-25, 10, 0), nil, props, vmath.vector3(0.5, 0.5, 0.5))
		go.set_parent(self.button_talk, go.get_id())
		local props = {label = hash("btn_crew_role"), callback = hash("crew_role"),	enabled = true, id = id}
		self.button_role = factory.create("#factory_button", vmath.vector3(-25, 30, 0), nil, props, vmath.vector3(0.5, 0.5, 0.5))
		go.set_parent(self.button_role, go.get_id())

	elseif message_id == hash("deselect") then
		sprite.play_flipbook("#reticle", "crew_reticle")
		msg.post("#reticle", hash("disable"))
		msg.post("#name", hash("disable"))
		msg.post("#role_icon", hash("disable"))
		msg.post("#role_label", hash("disable"))
		go.delete(self.button_talk, true)
		go.delete(self.button_role, true)
	elseif message_id == hash("set_role") then
		self.role = message.role
		if self.role == hash("role_none") or self.role == hash("role_passenger") then
			sprite.set_constant("#role_icon", "tint", vmath.vector4(1, 1, 1, 0))
			label.set_text("#role_label", "")
		else
			local role_icons = {
				[hash("role_pilot")] = "pilot",
				[hash("role_medic")] = "medic",
				[hash("role_engineer")] = "mech",
				[hash("role_comms")] = "comms",
				[hash("role_gunner")] = "gunner",
				[hash("role_passenger")] = "none",
			}
			sprite.set_constant("#role_icon", "tint", vmath.vector4(1, 1, 1, 1))
			sprite.play_flipbook("#role_icon", role_icons[self.role])
			label.set_text("#role_label", STR.en.ui[self.role])

			local target_room = ROOM.get_room_from_role(self.role)
			if target_room then
				walk(ROOM.list[target_room].x, ROOM.list[target_room].y, self)
			end
		end
	elseif message_id == hash("dismiss") then
		msg.post("/cursor", "deleted", {id = go.get_id()})
		go.delete(true)
	elseif message_id == hash("issue_raised") then
		msg.post("#speech_bubble", hash("enable"))
	elseif message_id == hash("issue_solved") then
		msg.post("#speech_bubble", hash("disable"))
	end
end