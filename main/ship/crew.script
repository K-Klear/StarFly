go.property("crew", 0)
go.property("level", 0)
SHIP = require("main.ship.ship_layout")

local sprite_parts = {"hand", "head", "legs", "torso"}

local function getClosestLadder(target_level, self)
	local dist = 1/0
	local best
	if self.level ~= 2 then target_level = 2 end
	for key, val in ipairs(SHIP.LADDERS) do
		if val.level == self.level and val.target == target_level then
			local distance = math.abs(val.x - go.get_position().x)
			if distance < dist then
				best = val
				dist = distance
			end
		end
	end
	return best
end


local function walk(self)
	if SHIP[self.destination].level == self.level then
		if go.get_position().x == SHIP[self.destination].x then
			for key, val in ipairs(sprite_parts) do
				sprite.play_flipbook("#"..val, val.."_idle")
			end
		else
			local flip = go.get_position().x < SHIP[self.destination].x
			for key, val in ipairs(sprite_parts) do
				sprite.play_flipbook("#"..val, val.."_walk")
				sprite.set_hflip("#"..val, flip)
			end
			local duration = math.abs(SHIP[self.destination].x - go.get_position().x) * 0.02
			go.animate(go.get_id(), "position.x", go.PLAYBACK_ONCE_FORWARD, SHIP[self.destination].x, go.EASING_LINEAR, duration, 0, walk)
		end
	else
		local ladder = getClosestLadder(SHIP[self.destination].level, self)
		if go.get_position().x == ladder.x then
			go.animate(go.get_id(), "position.y", go.PLAYBACK_ONCE_FORWARD, (ladder.target * 96) - 128, go.EASING_LINEAR, 1.72, 0, walk)
			self.level = ladder.target
		else
			local flip = go.get_position().x < ladder.x
			for key, val in ipairs(sprite_parts) do
				sprite.play_flipbook("#"..val, val.."_walk")
				sprite.set_hflip("#"..val, flip)
			end
			local duration = math.abs(ladder.x - go.get_position().x) * 0.02
			go.animate(go.get_id(), "position.x", go.PLAYBACK_ONCE_FORWARD, ladder.x, go.EASING_LINEAR, duration, 0, walk)
		end
	end
end

function init(self)
	go.set_parent(go.get_id(), "/ship")
	sprite.set_constant("#hand", "tint", crew[self.crew].face.skinTone)
	sprite.set_constant("#head", "tint", crew[self.crew].face.skinTone)
	sprite.set_constant("#torso", "tint", crew[self.crew].face.clothesColor)
	sprite.set_constant("#legs", "tint", crew[self.crew].face.clothesColor - vmath.vector4(0.1, 0.1, 0.1, 0))
end


function on_message(self, message_id, message, sender)
	if message_id == hash("move") then
		self.destination = message.target
		walk(self)
	end
end

function update(self, dt)
	msg.post("/main#interface", "update_position", {pos = go.get_world_position(), crew = self.crew})
end