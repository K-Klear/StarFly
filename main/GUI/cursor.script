local screen_size = {x = 1280, y = 900}
local active_button
local mouse_pressed = false

local crew_moused = {}
local room_moused = {}
local highlighted
local selected

local moused = {}

local ship_selection_enabled = true

function init(self)
	msg.post(".", "acquire_input_focus")
end

local function set_highlight()
	if highlighted and highlighted ~= moused[1] and highlighted ~= selected then
		msg.post(highlighted, "remove_highlight")
	end
	if moused[1] then
		if moused[1] ~= highlighted then
			msg.post(moused[1], "highlight")
			highlighted = moused[1]
		end
	else
		if highlighted and highlighted ~= selected then
			msg.post(highlighted, "remove_highlight")
			highlighted = nil
		end
	end
end

local function delete_moused(value)
	for key, val in ipairs(moused) do
		if val == value then
			table.remove(moused, key)
			return
		end
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("trigger_response") then
		if message.enter then
			if message.other_group == hash("button") then
				active_button = message.other_id
				if mouse_pressed then msg.post(active_button, "pressed") end
			elseif message.other_group == hash("crew") then
				table.insert(moused, 1, message.other_id)
			elseif message.other_group == hash("room") then
				table.insert(moused, message.other_id)
			end
		else
			if message.other_group == hash("button") then
				msg.post(message.other_id, "released")
				if active_button == message.other_id then active_button = nil end
			else
				delete_moused(message.other_id)
			end
		end
		set_highlight()
	elseif message_id == hash("deleted") then
		if active_button == message.id then active_button = nil end
		if selected == message.id then selected = nil end
		delete_moused(message.id)
		set_highlight()
	elseif message_id == hash("selected") then
		selected = message.id
		set_highlight()
	elseif message_id == hash("crew_selection") then
		ship_selection_enabled = message.enabled
		if not message.enabled then
			if selected then msg.post(selected, hash("deselect")); selected = nil end
		end
	end
end

function on_input(self, action_id, action)
	local zoom = math.min(screen_size.x / 1280, screen_size.y / 900)
	local projected_width = screen_size.x / zoom
	local projected_height = screen_size.y / zoom
	local xoffset = -(projected_width - 1280) / 2
	local yoffset = -(projected_height - 900) / 2
	local x = (action.x / 1280) * projected_width + xoffset
	local y = (action.y / 900) * projected_height + yoffset
	go.set_position(vmath.vector3(x, y, 1), go.get_id("/cursor"))
	if action_id == hash("click") then
		if action.pressed then
			mouse_pressed = true
			if active_button then msg.post(active_button, "pressed") end
		elseif action.released then
			mouse_pressed = false
			if active_button then
				msg.post(active_button, "activated")
			elseif ship_selection_enabled then
				if selected then msg.post(selected, hash("deselect")) end
				if highlighted and highlighted ~= selected then
					msg.post(highlighted, "clicked")
				end
				selected = nil
			end
		end
	end
end