local screen_size = {x = 1280, y = 900}
local active_button
local mouse_pressed = false

local crew_moused = {}
local room_moused = {}
local highlighted
local selected


local crew_selection_enabled = true

function init(self)
	msg.post(".", "acquire_input_focus")
end

function on_message(self, message_id, message, sender)
	if message_id == hash("trigger_response") then
		if message.other_group == hash("button") then
			if message.enter then
				active_button = message.other_id
				if mouse_pressed then msg.post(active_button, "pressed") end
			else
				msg.post(message.other_id, "released")
				if active_button == message.other_id then active_button = nil end
			end
		elseif message.other_group == hash("room") then
			if message.enter then
				room_moused[message.other_id] = true
				if not highlighted then
					highlighted = message.other_id
					msg.post(highlighted, "highlight")
				end
			else
				room_moused[message.other_id] = nil
				msg.post(message.other_id, "remove_highlight")
				if highlighted == message.other_id then
					local new = next(crew_moused)
					if new then
						msg.post(new, "highlight")
						highlighted = new
					else
						highlighted = nil
					end
				end
			end
		elseif message.other_group == hash("crew") then
			if message.enter then
				crew_moused[message.other_id] = true
				if highlighted then msg.post(highlighted, "remove_highlight") end
				highlighted = message.other_id
				msg.post(highlighted, "highlight")
			elseif message.other_id ~= selected then
				crew_moused[message.other_id] = nil
				msg.post(message.other_id, "remove_highlight")
				if highlighted == message.other_id then
					local new = next(crew_moused)
					if new then
						msg.post(new, "highlight")
						highlighted = new
					else
						new = next(room_moused)
						if new then
							msg.post(new, "highlight")
							highlighted = new
						else
							highlighted = nil
						end
					end
				end
			end
		end
	elseif message_id == hash("deleted") then
		if active_button == message.id then active_button = nil end
		if selected == message.id then selected = nil end
		if crew_moused[selected] then crew_moused[selected] = nil end
		if highlighted == message.id then
			local new = next(crew_moused)
			if new then	msg.post(new, "highlight");	highlighted = new end
		end
	elseif message_id == hash("crew_selection") then
		crew_selection_enabled = message.enabled
		if not message.enabled then
			if selected then msg.post(selected, hash("deselect")); selected = nil end
		end
	end
end

function on_input(self, action_id, action)
	local zoom = math.min(screen_size.x / 1280, screen_size.y / 900)
	local projected_width = screen_size.x / zoom
	local projected_height = screen_size.y / zoom
	local xoffset = -(projected_width - 1280) / 2
	local yoffset = -(projected_height - 900) / 2
	local x = (action.x / 1280) * projected_width + xoffset
	local y = (action.y / 900) * projected_height + yoffset
	go.set_position(vmath.vector3(x, y, 1), go.get_id("/cursor"))
	if action_id == hash("click") then
		if action.pressed then
			mouse_pressed = true
			if active_button then msg.post(active_button, "pressed") end
			if crew_selection_enabled and highlighted then
				if selected then msg.post(selected, hash("deselect")) end
				if crew_moused[highlighted] then
					selected = highlighted
					crew_moused[selected] = nil
					local new = next(crew_moused)
					if new then	msg.post(new, "highlight");	highlighted = new
					else highlighted = nil	end
					msg.post(selected, "select")
				elseif room_moused[highlighted] then
					msg.post(highlighted, "clicked")
				end
			end
		elseif action.released then
			mouse_pressed = false
			if active_button then msg.post(active_button, "activated") end
		end
	end
end